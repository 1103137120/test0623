@model mvc.Models.Order

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>訂單編輯頁面</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)
        <table class="table table-bordered ">
            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Model.OrderId
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @{
                        List<SelectListItem> items = (List<SelectListItem>)ViewData["CustIdItem"];
                    }
                    @Html.DropDownListFor(model => model.CustId, items, "請選擇", null)
                    @Html.ValidationMessageFor(model => model.CustId, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @{
                        List<SelectListItem> EmpId = (List<SelectListItem>)ViewData["EmpIdItem"];
                    }
                    @Html.DropDownListFor(model => model.EmpId, EmpId, "請選擇", null)
                    @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.RequireDate, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.RequireDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RequireDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.ShippedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipperName, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @{
                        List<SelectListItem> ShipperId = (List<SelectListItem>)ViewData["ShipperIdItem"];
                    }
                    @Html.DropDownListFor(model => model.ShipperId, ShipperId, "請選擇", null)
                    @Html.ValidationMessageFor(model => model.ShipperId, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Freight, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Freight, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipRegion, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipRegion, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label " })</td>
                <td>
                    @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr><td>訂單金額總計</td><td></td></tr>
            <tr>
                <td></td>
                <td>
                    <input type="submit" value="存檔" class="btn btn-default" />
                    @Html.ValidationMessage("UpdateError")
                    <input type="button" value="刪除本筆訂單" class="btn btn-default" onclick="javascript:window.location='@Url.Action("Delete", "Order",new { OrderId = Model.OrderId })'" />
                    <input type="button" value="回前一頁" class="btn btn-default" onclick="javascript:window.location='@Url.Action("Index", "Order")'" />
                </td>
            </tr>
        </table>                  
    </div>
}

